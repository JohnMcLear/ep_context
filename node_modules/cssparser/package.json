{
  "name": "cssparser",
  "author": {
    "name": "Chang W. Doh",
    "email": "changwook.doh@gmail.com"
  },
  "description": "parsing CSS document and transform to JSON format",
  "keywords": [
    "css",
    "parser",
    "json",
    "validation",
    "transform"
  ],
  "version": "0.2.2",
  "preferGlobal": true,
  "repository": {
    "type": "git",
    "url": "git://github.com/cwdoh/cssparser.js.git"
  },
  "bugs": {
    "url": "http://github.com/cwdoh/cssparser.js/issues"
  },
  "main": "lib/cssparser.js",
  "bin": {
    "cssparser": "lib/cli.js"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "dependencies": {
    "nomnom": ">= 1.5.x",
    "colors": ">= 0.6.0"
  },
  "devDependencies": {
    "grunt": "~0.4.x",
    "jison": ">= 0.4.4",
    "grunt-contrib-concat": "~0.1.2",
    "grunt-contrib-uglify": "~0.1.2",
    "grunt-contrib-copy": "~0.4.0",
    "grunt-contrib-yuidoc": "~0.4.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-coffee": "~0.6.0"
  },
  "homepage": "http://cwdoh.github.io/cssparser.js/",
  "optionalDependencies": {},
  "license": {
    "type": "MIT",
    "url": "http://www.opensource.org/licenses/mit-license.php"
  },
  "readme": "cssparser.js\n======\n\ncssparser.js is a parser that generates json matched with source css structure.\n\n##Description\n\n* License: MIT license - [http://www.opensource.org/licenses/mit-license.php](http://www.opensource.org/licenses/mit-license.php)\n* Author : Chang W. Doh\n\n##Demo\n\n* [http://cwdoh.github.io/cssparser.js/demo/CSS_stringify.html](//cwdoh.github.io/cssparser.js/demo/CSS_stringify.html)\n\n##Dependency\n\nJust want to use cssparser.js? Nothing needed.\n\nIf want generating parser, install 'jison' before it.\n\n* Jison - [http://jison.org](http://jison.org )\n\n\n##Usage\n\n###from Command-line\n\n\nFirst of all, you should install cssparser.\n\n\t$ npm install cssparser\n\t\n\tor\n\t\n\t$ npm install cssparser -g\n\nThen execute and you can generate JSON file from command-line.\n\n\t$ cssparser cssFile\n\t\n\tor \n\t\n\t$ cssparser cssFile -o output_file\n\n\n###from CommonJS Module\n\nYou can generate javascript object from your javascript module.\n\n\t// getting parser module\n\tvar cssparser = require(\"cssparser\");\n\t\n\t// create new instance of Parser\n\tvar parser = new cssparser.Parser();\n\t\n\t// parse & getting json\n\tvar json = parser.parse( cssText );\n\n\n##Generating parser from source\n\n###Getting jison & source\n\n\t$ npm install jison -g\n\t$ git clone https://github.com/cwdoh/cssparser.js.git\n\n###Generating from source\n\n\t$ grunt\n\t\n\tor\n\t\n\t$ jison ./src/cssparser.y ./src/css.l\n\n\n##JSON Structure\n\nThere are 3 types of JSON format.\n\n* simple - most simple.\n\t* simply consist of just key & value.\n* deep - more detailed then simple mode.\n\t* this includes more informations of selector, terms, expression, queries, …\n* atomic - most detailed. 'atomic' JSON has all pieces of each key & values in CSS.\n\t* e.g. length has numeric value & its unit like \"100px\" -> { \"value\": 100, \"unit\": \"px\" }\n\n###Type 'simple'\n\n\n\tstylesheet_object =\n\t\n\t\t+ charset [Object]\n\n\t\t+ imports [Array]\n\t\t\t+ [Object(Import)]\n\t\t\t\t+ type : \"import\" : [DOMString]// URI or string\n\t\t\t\t+ mediaquries [DOMString] : // if query exist\n\n\t\t+ namespaces [Array]\n\t\t\t+ namespace [DOMString] : // URI or string \n\t\t\t+ prefix [DOMString] : // if prefix exist\n\n\t\t+ rulelist [Array]\n\t\t\t+ [Object(Media)]\n\t\t\t\t+ type [DOMString] : \"media\"\n\t\t\t\t+ mediaqueries [DOMString] : // query string\n\t\t\t\t+ children [Array] : // nested rulelist\n\t\t\t\t\t+ rulelist // …\n\n\t\t\t+ [Object(FontFace)]\n\t\t\t\t+ type [DOMString] : \"fontface\"\n\t\t\t\t+ declarations [Object] : // declarations\n\n\t\t\t+ [Object(Page)]\n\t\t\t\t+ type [DOMString] : \"page\"\n\t\t\t\t+ id [DOMString] : // identifier\n\t\t\t\t+ pseudo [DOMString] : // pseudo string\n\t\t\t\t+ declarations [Object] : // declarations\n\n\t\t\t+ [Object(Style)]\n\t\t\t\t+ type [DOMString] : \"style\"\n\t\t\t\t+ selector [DOMString] : // selector string\n\t\t\t\t+ declarations [Object] : // declarations\n\n\t\t\t+ [Object(Keyframes)]\n\t\t\t\t+ type [DOMString] : \"keyframes\"\n\t\t\t\t+ id [DOMString] : // identifier\n\t\t\t\t+ prefix [DOMString] : // vendor prefix e.g. -moz-, -webkit-, -o-, …\n\t\t\t\t+ keyframes [Array]\n\t\t\t\t\t+ [Object(keyframe)]\n\t\t\t\t\t\t+ type [DOMString] : \"keyframe\"\n\t\t\t\t\t\t+ offset [DOMString] : // offset string\n\t\t\t\t\t\t+ declarations [Object] : // declarations\n\n###Type 'deep'\n\nNot yet.\n\n###Type 'atomic'\n\nNot yet.\n\n##Example\n\nExample is tested with rulesets of [http://css3please.com](http://css3please.com)\n\n\tcssparser example/test.css --console -i 4\n\n###Input\n\n\t@charset 'utf-8';\n\t\n\t@import 'custom.css';\n\t@import url(\"fineprint.css\");\n\t@import url(\"fineprint.css\") print;\n\t@import url(\"bluish.css\") projection, tv;\n\t@import \"common.css\" screen, projection;\n\t@import url('landscape.css') screen and (orientation:landscape);\n\t\n\t@namespace \"http://www.w3c.org\";\n\t@namespace svg \"http://www.w3c.org/svg\";\n\t\n\t@media screen {\n\t\t* {\n\t\t   position: absolute;\n\t\t }\n\t\n\t\t.box_shadow {\n\t\t  -webkit-box-shadow: 0px 0px 4px 0px #ffffff; /* Android 2.3+, iOS 4.0.2-4.2, Safari 3-4 */\n\t\t\t\t  box-shadow: 0px 0px 4px 0px #ffffff; /* Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+ */\n\t\t}\n\t}\n\t\n\t@-webkit-keyframes myanim {\n\t  0%   { opacity: 0.0; }\n\t  50%  { opacity: 0.5; }\n\t  100% { opacity: 1.0; }\n\t}\n\t\n\t.matrix {\n\t  \n\t-webkit-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\n\t-moz-transform: matrix(1.186,-0.069,0.102,1.036,16.595px,73.291px);\n\t-ms-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\n\t-o-transform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\n\ttransform: matrix(1.186,-0.069,0.102,1.036,16.595,73.291);\n\t\n\t}\n\t\n\t@font-face {\n\t  font-family: 'WebFont';\n\t  src: url('myfont.woff') format('woff'), /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */\n\t       url('myfont.ttf') format('truetype'); /* Chrome 4+, Firefox 3.5, Opera 10+, Safari 3—5 */\n\t}\n\n###JSON Output\n\n\t{\n\t\t\"charset\": \"'utf-8'\",\n\t\t\"imports\": [\n\t\t\t{\n\t\t\t\t\"import\": \"'custom.css'\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"import\": \"url(\\\"fineprint.css\\\")\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"import\": \"url(\\\"fineprint.css\\\")\",\n\t\t\t\t\"mediaqueries\": \"print\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"import\": \"url(\\\"bluish.css\\\")\",\n\t\t\t\t\"mediaqueries\": \"projection, tv\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"import\": \"\\\"common.css\\\"\",\n\t\t\t\t\"mediaqueries\": \"screen, projection\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"import\": \"url('landscape.css')\",\n\t\t\t\t\"mediaqueries\": \"screen and (orientation:landscape)\"\n\t\t\t}\n\t\t],\n\t\t\"namespaces\": [\n\t\t\t{\n\t\t\t\t\"namespace\": \"\\\"http://www.w3c.org\\\"\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"namespace\": \"\\\"http://www.w3c.org/svg\\\"\",\n\t\t\t\t\"prefix\": \"svg\"\n\t\t\t}\n\t\t],\n\t\t\"rulelist\": [\n\t\t\t{\n\t\t\t\t\"type\": \"media\",\n\t\t\t\t\"mediaqueries\": \"screen\",\n\t\t\t\t\"children\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"style\",\n\t\t\t\t\t\t\"selector\": \"*\",\n\t\t\t\t\t\t\"declarations\": {\n\t\t\t\t\t\t\t\"position\": \"absolute\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"type\": \"style\",\n\t\t\t\t\t\t\"selector\": \".box_shadow\",\n\t\t\t\t\t\t\"declarations\": {\n\t\t\t\t\t\t\t\"-webkit-box-shadow\": \"0px 0px 4px 0px #ffffff\",\n\t\t\t\t\t\t\t\"box-shadow\": \"0px 0px 4px 0px #ffffff\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"keyframes\",\n\t\t\t\t\"id\": \"myanim\",\n\t\t\t\t\"keyframes\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"offset\": \"0%\",\n\t\t\t\t\t\t\"declarations\": {\n\t\t\t\t\t\t\t\"opacity\": \"0.0\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"offset\": \"50%\",\n\t\t\t\t\t\t\"declarations\": {\n\t\t\t\t\t\t\t\"opacity\": \"0.5\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"offset\": \"100%\",\n\t\t\t\t\t\t\"declarations\": {\n\t\t\t\t\t\t\t\"opacity\": \"1.0\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"prefix\": \"-webkit-\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"style\",\n\t\t\t\t\"selector\": \".matrix\",\n\t\t\t\t\"declarations\": {\n\t\t\t\t\t\"-webkit-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\n\t\t\t\t\t\"-moz-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595px,73.291px)\",\n\t\t\t\t\t\"-ms-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\n\t\t\t\t\t\"-o-transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\",\n\t\t\t\t\t\"transform\": \"matrix(1.186,-0.069,0.102,1.036,16.595,73.291)\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"type\": \"fontface\",\n\t\t\t\t\"declarations\": {\n\t\t\t\t\t\"font-family\": \"'WebFont'\",\n\t\t\t\t\t\"src\": \"url('myfont.woff') format('woff'),url('myfont.ttf') format('truetype')\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n##Change log\n\n* 0.2.0 - May 20th, 2013\n\t* Initial release of cssparser.js.\n* 0.2.1 - May 21st, 2013\n\t* Update grunt, dependencies, cli options & output message\n\t* Add 'keyframe' type at child node of keyframes\n* 0.2.2 - July 27th, 2013\n\t* Add ratio type expression with '/'. thanks to Mohsen Heydari.\n\n##To do list\n\n* Parsing & generating options like simple JSON expression or more detailed.\n* Error recovery for input css.\n* Utilities\n\t* Minify & optimize css.\n\t* Auto-generate Cross-browsing stylesheets.\n\n",
  "readmeFilename": "README.md",
  "_id": "cssparser@0.2.2",
  "dist": {
    "shasum": "9976a7ad916f4f2009adda7a2991000ec40f76f5",
    "tarball": "http://registry.npmjs.org/cssparser/-/cssparser-0.2.2.tgz"
  },
  "_from": "cssparser@*",
  "_npmVersion": "1.2.30",
  "_npmUser": {
    "name": "cwdoh",
    "email": "changwook.doh@gmail.com"
  },
  "maintainers": [
    {
      "name": "cwdoh",
      "email": "changwook.doh@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "9976a7ad916f4f2009adda7a2991000ec40f76f5",
  "_resolved": "https://registry.npmjs.org/cssparser/-/cssparser-0.2.2.tgz"
}
